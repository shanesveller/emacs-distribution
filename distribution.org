#+STARTUP: content
#+STARTUP: nohideblocks
#+STARTUP: noindent
#+OPTIONS: toc:4 h:4
#+PROPERTY: header-args:emacs-lisp :comments link

* References
** Emacs
   - http://sachachua.com/blog/category/geek/emacs/
   - http://sachachua.com/blog/category/geek/emacs/emacs-news/
   - https://www.emacswiki.org/
   - https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf
** Package Management
*** Straight.el
    - https://github.com/raxod502/straight.el
*** Use-package
    - https://github.com/jwiegley/use-package
* Bootstrap
** Emacs Home Directory
   References:
   - https://emacs.stackexchange.com/questions/4253/how-to-start-emacs-with-a-custom-user-emacs-directory
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (setq user-init-file (or load-file-name (buffer-file-name))
           user-emacs-directory (file-name-directory user-init-file))
   #+END_SRC
** Straight.el
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (setq straight-repository-branch "develop")
     (defvar bootstrap-version)
     (let ((bootstrap-file
            (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
           (bootstrap-version 5))
       (unless (file-exists-p bootstrap-file)
         (with-current-buffer
             (url-retrieve-synchronously
              "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
              'silent 'inhibit-cookies)
           (goto-char (point-max))
           (eval-print-last-sexp)))
       (load bootstrap-file nil 'nomessage))
   #+END_SRC
** Use-package
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (straight-use-package 'use-package)
   #+END_SRC
* Configuration
** Personal Information
   References:
   - https://www.gnu.org/software/emacs/manual/html_node/elisp/User-Identification.html
   - http://pages.sachachua.com/.emacs.d/Sacha.html#org21ba8a0
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (setq user-full-name "Shane Sveller"
           user-mail-address "shane@shanesveller.com")
   #+END_SRC
* Behavior
** Self-Reload
   References:
   - https://orgmode.org/worg/org-contrib/babel/intro.html#emacs-initialization
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (defvar my/config-file
       (concat user-emacs-directory "distribution.org")
       "Location of root .org file governing this Emacs installation.")
     (defun my/edit-config ()
       "Visit .org configuration file via find-file"
       (interactive)
       (find-file my/config-file))
     (defun my/reload-config ()
       "Automatically reloads configuration via org-babel-load-file"
       (interactive)
       (progn
         (org-babel-tangle-file my/config-file)
         (load-file user-init-file)))
   #+END_SRC
** Inhibit File Backups
   References:
   - http://ergoemacs.org/emacs/emacs_set_backup_into_a_directory.html
   - https://www.gnu.org/software/emacs/manual/html_node/emacs/Backup.html#Backup
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (setq auto-save-default nil
           create-lockfiles nil
           make-backup-files nil)
   #+END_SRC
** Startup Performance
   References:
   - https://github.com/jschaf/esup
   - https://oremacs.com/2015/02/24/emacs-speed-test/
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (straight-use-package 'esup)
   #+END_SRC
* Features
** TODO Evil-Mode
   References:
   - https://github.com/emacs-evil/evil
   - https://www.emacswiki.org/emacs/Evil
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (straight-use-package 'evil)
   #+END_SRC
** TODO Magit
   References:
   - https://github.com/magit/magit
   - https://magit.vc/
   - https://magit.vc/manual/magit/Installation.html
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (straight-use-package 'magit)
   #+END_SRC
*** TODO Forge
    References:
    - https://emacsair.me/2018/12/19/forge-0.1/
    - https://github.com/magit/forge
    - https://magit.vc/manual/forge/
    #+BEGIN_SRC emacs-lisp :tangle init.el
      (straight-use-package 'forge)
    #+END_SRC
** TODO Org-Mode
   References:
   - https://orgmode.org/
   - https://github.com/emacsmirror/org
   - https://github.com/raxod502/straight.el/issues/211#issuecomment-355379837
   #+BEGIN_SRC emacs-lisp :tangle init.el
     ;; (straight-use-package 'org)
     (straight-override-recipe
      '(org :type git :host github :repo "emacsmirror/org" :no-build t))
     (straight-use-package 'org-plus-contrib)
   #+END_SRC
** TODO Unpackaged
   References:
   - https://github.com/alphapapa/unpackaged.el
   #+BEGIN_SRC emacs-lisp :tangle init.el
     (straight-use-package
       '(unpackaged :type git :host github :repo "alphapapa/unpackaged.el"))
   #+END_SRC
